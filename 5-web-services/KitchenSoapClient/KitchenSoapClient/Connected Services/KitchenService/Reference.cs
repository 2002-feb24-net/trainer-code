//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KitchenSoapClient.KitchenService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FridgeItem", Namespace="http://schemas.datacontract.org/2004/07/KitchenSoapService")]
    [System.SerializableAttribute()]
    public partial class FridgeItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KitchenService.IKitchenService")]
    public interface IKitchenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/LookInsideFridge", ReplyAction="http://tempuri.org/IKitchenService/LookInsideFridgeResponse")]
        KitchenSoapClient.KitchenService.FridgeItem[] LookInsideFridge();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/LookInsideFridge", ReplyAction="http://tempuri.org/IKitchenService/LookInsideFridgeResponse")]
        System.Threading.Tasks.Task<KitchenSoapClient.KitchenService.FridgeItem[]> LookInsideFridgeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/CleanFridge", ReplyAction="http://tempuri.org/IKitchenService/CleanFridgeResponse")]
        bool CleanFridge();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/CleanFridge", ReplyAction="http://tempuri.org/IKitchenService/CleanFridgeResponse")]
        System.Threading.Tasks.Task<bool> CleanFridgeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/TakeOutLeftovers", ReplyAction="http://tempuri.org/IKitchenService/TakeOutLeftoversResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IKitchenService/TakeOutLeftoversFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        KitchenSoapClient.KitchenService.FridgeItem TakeOutLeftovers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/TakeOutLeftovers", ReplyAction="http://tempuri.org/IKitchenService/TakeOutLeftoversResponse")]
        System.Threading.Tasks.Task<KitchenSoapClient.KitchenService.FridgeItem> TakeOutLeftoversAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/PutInFridge", ReplyAction="http://tempuri.org/IKitchenService/PutInFridgeResponse")]
        void PutInFridge(KitchenSoapClient.KitchenService.FridgeItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKitchenService/PutInFridge", ReplyAction="http://tempuri.org/IKitchenService/PutInFridgeResponse")]
        System.Threading.Tasks.Task PutInFridgeAsync(KitchenSoapClient.KitchenService.FridgeItem item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKitchenServiceChannel : KitchenSoapClient.KitchenService.IKitchenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KitchenServiceClient : System.ServiceModel.ClientBase<KitchenSoapClient.KitchenService.IKitchenService>, KitchenSoapClient.KitchenService.IKitchenService {
        
        public KitchenServiceClient() {
        }
        
        public KitchenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KitchenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KitchenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KitchenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KitchenSoapClient.KitchenService.FridgeItem[] LookInsideFridge() {
            return base.Channel.LookInsideFridge();
        }
        
        public System.Threading.Tasks.Task<KitchenSoapClient.KitchenService.FridgeItem[]> LookInsideFridgeAsync() {
            return base.Channel.LookInsideFridgeAsync();
        }
        
        public bool CleanFridge() {
            return base.Channel.CleanFridge();
        }
        
        public System.Threading.Tasks.Task<bool> CleanFridgeAsync() {
            return base.Channel.CleanFridgeAsync();
        }
        
        public KitchenSoapClient.KitchenService.FridgeItem TakeOutLeftovers() {
            return base.Channel.TakeOutLeftovers();
        }
        
        public System.Threading.Tasks.Task<KitchenSoapClient.KitchenService.FridgeItem> TakeOutLeftoversAsync() {
            return base.Channel.TakeOutLeftoversAsync();
        }
        
        public void PutInFridge(KitchenSoapClient.KitchenService.FridgeItem item) {
            base.Channel.PutInFridge(item);
        }
        
        public System.Threading.Tasks.Task PutInFridgeAsync(KitchenSoapClient.KitchenService.FridgeItem item) {
            return base.Channel.PutInFridgeAsync(item);
        }
    }
}
